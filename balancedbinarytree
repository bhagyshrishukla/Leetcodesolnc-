/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public bool IsBalanced(TreeNode root) {
        return GetHeight(root)!=-1;
        
    }
    private int GetHeight(TreeNode current)
    {
        if(current==null) return 0;
        var left=GetHeight(current.left);
        var right=GetHeight(current.right);
        if(left==-1) return -1;
        if(right==-1) return -1;
        if(Math.Abs(left-right)>1) return -1;
        return Math.Max(left,right)+1;
    }
}
